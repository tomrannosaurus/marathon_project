---
title: \small \vspace{-1cm} Examining the Relationship Between Environmental Conditions and Marathon Performance in Male and Female Runners of Different Ages
author: \vspace{-1cm} \small Thomas. B Arnold
#date: today
#date-format: long
format:
  pdf:
    fontsize: "10.5pt"
editor: source
bibliography: references.bib
header-includes:
- \usepackage{pdflscape}
- \input{geometry-settings.tex}
- \input{float-setup.tex}
- \input{column-commands.tex}
- \input{table-packages.tex}
- \input{title-settings.tex}
- \setlength{\textfloatsep}{10pt plus 1.0pt minus 2.0pt}
- \setlength{\intextsep}{10pt plus 1.0pt minus 2.0pt}
- \setlength{\tabcolsep}{5.5pt} # Default size is usually 6
editor_options: 
  chunk_output_type: console
---
:::{.content-hidden}
Note: "vspace" (below) reduces space between title and first paragraph. 
:::
\vspace{-2.5cm} 


:::{.content-hidden}
*NOTE* **-- Overall**                                                       
- Exposition of results is good, don't reduce only add if necessary

*TODO* **-- Overall**
[x] Used a lot of space for data intro -- edit to have more space for main aims
[x] Relate observations in aim 1 to future aims (I think this is done, but check) 


***Reflection***
The ratio of space used per section should match the importance of the questions being answer and the reflect the focus of the analysis.

Observations made in exploratory analysis (i.e. aim 1) should be used to generate future hypothesis as this is one of the primary functions of exploratory data analysis.
:::


## 1. Introduction

### 1.1 Background Information

The following project is based on the research of Dr. Brett Romano Ely and Dr. Matthew Ely, of Providence College’s Department of Health Sciences. Dr. Ely’s research investigates the relationship between environmental conditions and marathon performance in male and female runners of various ages. The underlying dataset tracks the environmental conditions and best single-age performances in men and women, ages 14-85, in five major marathons run over the course of seventeen to twenty-four years. Our analysis also considers air quality, which Dr. Ely cited as a potential future direction for research; it is well-known that air quality affects cardiorespiratory capacity [@stieb2018cardiorespiratory]. 
  
Across all runners, endurance exercise performance decreases as Wet Bulb Globe Temperature (WBGT) rises [@ely2010aerobic], and this decrease in performance is more evident in marathons and other long distance competitions [@ely2007impact]. WBGT is the weighted average of dry bulb temperature, wet bulb temperature (which factors in humidity), and black globe temperature (which factors in solar radiation) in Celsius.

Older runners tend to be particularly impacted by increased heat due to physiological thermoregulatory issues [@kenney2003invited]. Reduced sweat gland output, reduced skin blood flow, smaller increases in cardiac output, and decreased redistribution of blood flow from renal and splanchnic circulations may all contribute to older individuals' reduced heat stress tolerance [@kenney2003invited]. Over time, the effect of age on performance was worse for female runners (Ely, 2024, in progress). In the New York City marathon, both male and female “masters” runners (i.e., runners over the age of 40) tend to perform less well as temperature and humidity increase [@knechtle2021elite]. However, older marathon runners tend to have less pace variance than younger ones [@nikolaidis2019role]. While endurance performance [@besson2022sex] and thermoregulation processes [@yanovich2020sex] differ across sex, the effects of weather are less evident in female runners’ performances [@vihma2010effects]. Men are more likely than women to slow over the course of a marathon [@deaner2015men]. 

:::{.content-hidden}
*NOTE*
- Good background noted, leave as is.

***Reflection***
N/A
:::





### 1.2 Data Sources & Collection Methods

The dataset includes marathon results and environmental condition data for Boston, Chicago, New York, Twin Cities, and Grandma’s Marathons, run during periods of 17 to 24 years (1993-2016)  [@ely2024presentation]. Dr. Ely noted that the dataset ends in 2016 because advances in running shoe technology led to course records decreasing at an accelerated rate. The earliest years included in this dataset differ between cities (1993 for New York City, 1996 for Chicago, 1998 for Boston, and 2000 for Twin Cities and Grandma's). 

:::{.content-hidden}
*TODO* 
[x] Cite Dr. Ely class presentation in paragraph above

***Reflection***
Proper citations are critical for trustworthy research.
:::

The five races differ in some important respects reducing the comparability between samples, as reflected in the analysis in Section 3. Boston has higher qualification requirements than other marathons, such that fewer and different runners at the extremes of age are likely to compete. The Boston and Grandma's marathons are run at different times of year (April and June, respectively) than the other races (October to November). The courses also differ in elevation changes at different parts of the courses; New York, for example, has a large hill near the end of the course, which may affect runners differently based on their age or other factors. 

The fastest finishing time at each age for male and female runners was compared with the course record time, measured as a percent of the course record for that runner’s sex (`% CR` or % CR). The original dataset did not provide runners' actual finish times, but only their % CR. Using a dataset containing the course records for each year for males and females, we were able to convert the %CR to individual runners' finish times. An additional dataset used contained all dates of the marathons.

The source for the dataset is not clear from the materials provided. Here, we assume that the data sources are similar to those cited in Dr. Matthew Ely’s 2007 study, specifically: hourly weather data from the Air Force Combat Climatology Center and marathon race results from the public domain [@ely2007impact]. Notably, the precise geography for which weather data is collected is also not indicated, which introduces potential bias. This issue also exists with AQI data and is discussed in detail below. 

:::{.content-hidden}
*NOTE*
- Assumption about the source of the marathon data made in paragraph above is confirmed by Dr. Paul

***Reflection***
N/A
:::

Environmental condition variables follow. The temperature data, measured in Celsius, includes dry bulb temperature (`Td, C`); wet bulb temperature, which takes humidity into account (`Tw, C`); black globe temperature, which takes solar radiation into account (`Tg, C`); and Wet Bulb Globe Temperature (`WBGT`), which is a weighted average of Td, Tw, and Tg. The dataset also includes percent relative humidity (`% RH`); solar radiation in Watts per meter squared (`SR W/m2`); dew point in Celsius (`DP`); and wind speed in Km/hr (`Wind`). As noted above, the core dataset includes `Wind` speed without an indication of wind direction. As a result, we assume that higher winds make running more difficult, without respect to the direction of either the wind or the runner. The data also includes flags (`Flag`) of different colors depending on the `WBGT` and risk of heat illness: white (`WBGT` <10 C); green (`WBGT` 10-18 C); yellow (`WBGT` >18-23 C); red (`WBGT` >23-28 C); and black (`WBGT` >28 C). In Dr. Ely’s preliminary analysis of these data, races were initially divided into quintiles based on WBGT, after which regression analyses were performed to model finishing time by age, gender, and WBGT [@ely2024presentation]. Here, we take an approach allowing for analysis of temperature in its continuous form.

:::{.content-hidden}
*TODO*
[x] Cite Dr. Ely preliminary paper in paragraph above if possible

***Reflection***
Proper citations are critical for trustworthy research.
:::


Dr. Ely’s analysis also did not include air quality and noted air quality as a future direction, stating that previous work indicated that air quality may affect women more than men. We use air quality data from the `RAQSAPI` library in R to fetch air quality index (`AQI` or AQI) data for marathon days [@RAQSAPI]. The source of the data used in this package is the EPA’s Air Quality System (AQS) Data Mart API v2 Air Quality System interface, containing every measured value collected by the EPA via the national ambient air monitoring program and aggregate values. We retrieve seven separate parameters from AQS from which AQI is estimated: PM2.5 Local Conditions; PM10 Total 0-10 um STP (standard temperature and pressure); Acceptable PM2.5 AQI & Speciation Mass; Ozone; Carbon Monoxide (CO), Nitrogen Dioxide (NO2), and Sulfur Dioxide (SO2) [@EPA2024AQI]. Units are omitted because in the AQI dataset these different parameters are themselves used to estimate a single value of AQI, which is a unitless measure of air quality.

:::{.content-hidden}
*TODO*
[x] Cite R package for RAQSAPI in paragraph above

***Reflection***
Proper citations are critical for trustworthy research.
:::

We note two major limitations in our use of air quality data: geographic area inaccuracy and effects of aggregation. First, for geography, all marathons cover large geographic areas, but some routes loop back towards their origin. (Chicago and Twin Cities Marathons are closer to loops; Boston, New York City, and Grandma’s Marathons are more linear.) Notably, in Dr. Ely's 2007 paper, it states that the specific years of marathons used were chosen to ensure that none of the courses changed within the study period [@ely2007impact]; as discussed above, we do not know the source of our current data, but assume that the courses remained the same throughout the period at issue, as with the 2007 paper. Each of the marathons also run through downtown areas. Air quality is likely to differ significantly over the course of a race based on proximity to highways, airports, etc. 



Data extracted from the AQS uses the core based statistical area (CBSA), a larger geographical area than the marathon routes, incorporating suburban and exurban areas, which could lead to an underestimate of the AQI. A related limitation is that the AQS data are averaged over stations within the given CBSA because we do not know which stations are close to the marathon route, which is a potential area of refinement for future studies. This general note on geographic precision also applies to the weather variables present in the core marathon dataset, as noted above.  


Turning to aggregation, data extracted from the AQS retrieves the seven parameters from which AQI is estimated [@EPA2024AQI], discussed above (PM2.5 Local Conditions, etc.). We average the seven parameters, but the effects of these parameters on cardiorespiratory performance differ. Averaging them may thus underestimate the effect of a particular type of pollution on performance. However, we observe missingness in the AQS dataset for some individual parameter types by race and year. Therefore aggregation across parameters reduces the impact of missing data compared to using just one parameter.

:::{.content-hidden}
*TODO*
[x] Alter AQI handling as noted in paragraph above. We add to the initial AQI dataset three new variables, carbon monoxide (CO), nitrogen dioxide (NO2), and sulfer dioxide (SO2)
[x] Fix code to reflect new handling of AQI variables
[x] For updated aggregation cite AQI formula as the reason we grab the new parameters: https://document.airnow.gov/technical-assistance-document-for-the-reporting-of-daily-air-quailty.pdf    

***Reflection***
Different types of pollutants have different biological effects, so it is inaccurate to average across all types of air pollution. We do still aggregate the two PM2.5 AQI measures, but all other are left separate. Averaging all four together could obfuscate the effect of a single component, if that single competent does have a significant impact but the others do not. 
:::


When we separated out the AQI variables into their respective component parts we noticed an issue: there is a great deal of missing data for specific AQI variables for a given marathon event in a given year. This was not an issue in the previous strategy because there is at least one AQI value available for each race in each year. Therefore rather than split out the separate AQI variables, we opt to aggregate more AQI variables. Each row of the AQS dataset includes a date, station, parameter in the form of pollutant type sampled, duration of sampling, and the AQI value from that sample. Within one date and sometimes within one station, we aggregate dozens of estimates across the parameters and times.

Additional limitations applicable to both the air quality data and Dr. Ely’s environmental data follow. Because the Boston and Grandma's Marathons are run in April and June, while the others are run in October and November, different races had different environmental conditions, including AQI. AQI is typically much lower at night and in the morning, due to fluctuations in industrial and automotive activity, but AQI estimates are aggregated over the whole day. (We note that the AQS data provide a sample's duration but not the time the sample began to be taken.) And weather conditions change over the course of the day, with temperature typically lower in the morning. Currently, all five marathons start between 7:30 a.m. and 9:40 a.m.; we assume that this was the case during the period of time contained within the dataset. Runners also start the race at different times, with elite runners beginning earlier, and individual runners may take more or less time to complete the course. Individuals released later or spending more time running will likely experience different AQI and weather conditions than those released earlier and completing faster.






## 2. Data Preparation and Cleaning

### 2.1 Import, Initial Inspection, & Merging Datasets

Checks for consistency are conducted. Because variables are not properly named and labeled by default, recoding is conducted using the codebook. We ensure that `Race`, `Sex`, and `Flag` are correctly coded according to the code sheet. Categorical variables are converted to factors with labels. Course records are merged with the core provided dataset. Actual race times are computed using `% CR` and course record times. Marathon dates and course record datasets are merged on keys `Race`, `Year`, `Date`, `Sex`. As discussed above, `AQI` are aggregated across CBSA, the day of the marathon, and the pollution parameters to create one `AQI` value for a given marathon day. `AQI` readings are merged to marathon dates and locations. Dates are also merged to help with merging of `AQI`. For data verification, the number of observations before and after merging are checked to ensure no data loss. Spot checks are performed to confirm accurate merges. We verify that there are the same number of records for each race in our final merge dataset as in the original provided dataset and that no duplicate rows exist. Finally, we spot check the dataset to ensure that newly added variables appear as expected in association with their counterparts.



```{r setup, include=FALSE, message=FALSE}
# --- Preamble ---
# Date of last update: Oct. 7, 2024
# R Version: 4.3.1
# Package Versions:
#   tidyverse: 2.0.0
#   knitr: 1.45
#   kableExtra: 1.3.4
#   ggplot2: 3.4.3
#   naniar 1.0.0
#   visdat 0.6.0
#   car 3.1-2
#   lme4 1.1-34
#   ggpubr 0.6.0
#   broom.mixed 0.2.94
#   lemon 0.5.0

# Knitr Engine Setup
knitr::opts_chunk$set(message=F, 
                      warning=F, 
                      error=F, 
                      echo=F, 
                      fig.pos = "H" ,
                      fig.align = 'center')

# Packages
options(kableExtra.latex.load_packages = FALSE) # Required to avoid floatrow error
library(knitr)
library(kableExtra)
library(ggplot2)
library(naniar) # For mcar_test()
library(visdat) # For vis_dat()
library(tidyverse)
library(car) # For qqPlot(), vif()
library(lme4)
library(lmerTest) # Satterthwaite approximation for computing p-values on lme4
library(ggpubr)
library(broom.mixed)
library(lemon)



source("~/GitHub/marathon_project/_helpers.R")

setwd("~/GitHub/marathon_project/")

```


```{r read and label}

# Read in data
marathon_data <- read.csv("~/GitHub/marathon_project/data/project1.csv")
aqi_values <- read.csv("~/GitHub/marathon_project/data/aqi_values2.csv")
marathon_dates <- read.csv("~/GitHub/marathon_project/data/marathon_dates.csv")
course_record <- read.csv("~/GitHub/marathon_project/data/course_record.csv")


# Label and rename main dataset
marathon_data <- marathon_data %>%
  mutate(
    Race = factor(case_when(
      Race..0.Boston..1.Chicago..2.NYC..3.TC..4.D. ==
        0 ~ "Boston Marathon",
      Race..0.Boston..1.Chicago..2.NYC..3.TC..4.D. ==
        1 ~ "Chicago Marathon",
      Race..0.Boston..1.Chicago..2.NYC..3.TC..4.D. ==
        2 ~ "New York City Marathon",
      Race..0.Boston..1.Chicago..2.NYC..3.TC..4.D. ==
        3 ~ "Twin Cities Marathon (Minneapolis, MN)",
      Race..0.Boston..1.Chicago..2.NYC..3.TC..4.D. ==
        4 ~ "Grandma's Marathon (Duluth, MN)",
      TRUE ~ NA
    )),
    Sex = factor(case_when(
      Sex..0.F..1.M. == 0 ~ "Female",
      Sex..0.F..1.M. == 1 ~ "Male",
      TRUE ~ NA
    )),
    Flag = factor(Flag,
                  levels = c("White", "Green", "Yellow", "Red", "Black"),
                  ordered = TRUE)
  ) %>%
  rename(
    `% CR` = X.CR,
    `Td, C` = Td..C,
    `Tw, C` = Tw..C,
    `% RH` = X.rh,
    `Tg, C` = Tg..C,
    `SR W/m2` = SR.W.m2,
    `DP` = DP,
    `Wind` = Wind,
    `WBGT` = WBGT,
    `Age` = Age..yr.
  ) %>%
  select(-Race..0.Boston..1.Chicago..2.NYC..3.TC..4.D.,
         -Sex..0.F..1.M.)

```

















```{r clean aqi}

# AQI parameters
# 88101 = PM2.5 - Local Conditions
# 81102 = PM10 Total 0-10um STP
# 88502 = Acceptable PM2.5 AQI & Speciation Mass
# 44201 = Ozone
# 42101 = CO 
# 42602 = NO2
# 42401 = SO2 

# Clean and prep AQI dataset
aqi_values <- aqi_values %>%
  group_by(date_local, marathon) %>%
  dplyr::summarize(
    aqi = mean(aqi, na.rm = TRUE)) %>%
  mutate(
    `AQI Level` = case_when(
      aqi <= 50 ~ "Good",
      aqi > 50 & aqi <= 100 ~ "Moderate",
      aqi > 100 & aqi <= 150 ~ "Unhealthy for Sensitive Groups",
      aqi > 150 & aqi <= 200 ~ "Unhealthy",
      aqi > 200 & aqi <= 300 ~ "Very Unhealthy",
      aqi > 300 ~ "Hazardous"
    ),
    `AQI Level` = factor(`AQI Level`,
                         levels = c("Good",
                                    "Moderate",
                                    "Unhealthy for Sensitive Groups",
                                    "Unhealthy",
                                    "Very Unhealthy",
                                    "Hazardous"), ordered = TRUE)
  ) %>%
  ungroup() %>%
  mutate(marathon = case_when(
    marathon == "Boston" ~ "Boston Marathon",
    marathon == "Chicago" ~ "Chicago Marathon",
    marathon == "NYC" ~ "New York City Marathon",
    marathon == "Twin Cities" ~ "Twin Cities Marathon (Minneapolis, MN)",
    marathon == "Grandmas" ~ "Grandma's Marathon (Duluth, MN)",
    TRUE ~ marathon)
  )

```




```{r merge and relabel data}

# Prepare CR dataset
course_record <- course_record %>%
  mutate(Race = case_when(
    Race == "B" ~ "Boston Marathon",
    Race == "C" ~ "Chicago Marathon",
    Race == "NY" ~ "New York City Marathon",
    Race == "TC" ~ "Twin Cities Marathon (Minneapolis, MN)",
    Race == "D" ~ "Grandma's Marathon (Duluth, MN)",
    TRUE ~ Race)) %>%
  mutate(Gender = case_when(
    Gender == "M" ~ "Male",
    Gender == "F" ~ "Female",
    TRUE ~ Gender))

# Prepare marathon dates dataset
marathon_dates <- marathon_dates %>%
  mutate(marathon = case_when(
    marathon == "Boston" ~ "Boston Marathon",
    marathon == "Chicago" ~ "Chicago Marathon",
    marathon == "NYC" ~ "New York City Marathon",
    marathon == "Twin Cities" ~ "Twin Cities Marathon (Minneapolis, MN)",
    marathon == "Grandmas" ~ "Grandma's Marathon (Duluth, MN)",
    TRUE ~ marathon)) %>%
  mutate(date = str_trim(date))



# Merge data
data <- marathon_data %>%
  left_join(marathon_dates, by = c("Race" = "marathon", "Year" = "year")) %>%
  left_join(aqi_values, by = c("date" = "date_local", "Race" = "marathon")) %>%
  left_join(course_record, by = c("Race", "Year", "Sex" = "Gender"))


# Clean data post merge
data <- data %>%
  mutate(
    Date = as.Date(date),
    Sex = factor(Sex, levels = c("Female", "Male")),
    Race = factor(Race, levels = c("Boston Marathon",
                                   "Chicago Marathon",
                                   "New York City Marathon",
                                   "Twin Cities Marathon (Minneapolis, MN)",
                                   "Grandma's Marathon (Duluth, MN)")),
    CR = hms::as_hms(CR),
    Time = hms::round_hms(hms::as_hms((period_to_seconds(hms(CR)) *
                                           (1+(`% CR`/100)))), 6)
  ) %>%
    rename(
    `AQI` = aqi,
  ) %>% 
  select(-date)


```


```{r merge checks, echo=F, eval=F}
# NOTE: This cell is not evaluated or printed in the report, but commentary on 
# the results is provided in prose.

# Number of observations by race
nrow(data[data$Race == "Boston Marathon", ]) ==
  nrow(marathon_data[marathon_data$Race == "Boston Marathon", ]) 

nrow(data[data$Race == "Chicago Marathon", ]) ==
  nrow(marathon_data[marathon_data$Race == "Chicago Marathon", ])


nrow(data[data$Race == "New York City Marathon", ]) ==
  nrow(marathon_data[marathon_data$Race == "New York City Marathon", ])


nrow(data[data$Race == "Twin Cities Marathon (Minneapolis, MN)", ]) ==
  nrow(marathon_data[marathon_data$Race == "Twin Cities Marathon (Minneapolis, MN)", ]) 


nrow(data[data$Race == "Grandma's Marathon (Duluth, MN)", ]) ==
  nrow(marathon_data[marathon_data$Race == "Grandma's Marathon (Duluth, MN)", ])



# Check for duplicate rows
data %>%
  group_by(Race, Year, Sex, Age) %>%
  filter(n() > 1) %>%
  nrow()

```







### 2.2 Data Cleaning

:::{.content-hidden}
*NOTE*
- Noted that section 2.3 could be shortened, however we opt not to remove content.

***Reflection***
We do not shorten section 2.3 because the information contained therein is valid and useful. We instead focus on adding additional context the the analysis portion of our project as a means to rebalance the ratio between preamble and analysis in our report.
:::


```{r make age groups}
# Make `Age Group`
data <- data %>%
  mutate(
    `Age Group` = cut(
      Age,
      breaks = c(0, 18, 25, 35, 45, 60, 70, Inf),
      labels = c("Age 0-17",
                 "Age 18-24",
                 "Age 25-34",
                 "Age 35-44", 
                 "Age 45-59",
                 "Age 60-69",
                 "Age 70+"),
      include.lowest = T
    )
  )
```



```{r reorder data}
# Reorder variables
data <- data %>%
  select(Race, Year, Sex, Age, `Age Group`, `% CR`, Flag,
         `Td, C`, `Tw, C`, `Tg, C`, DP, WBGT, everything())

```


First, we further prepare the dataset by generating a variable which quantized `Age` into `Age Group` (0-17, 18-24, 25-34, 35-44, 45-59, 60-69, 70+). We aggregated  U.S.A. Track & Field's 5-year age groups into larger groups to facilitate readable visualizations [@runnersworld2008]. We aggregate them so that ages 25-34 are in the same group, rather than as 20-29 and 30-39, given that peak marathon performance is known to generally occur between ages 25 and 35 [@trappe2007marathon]. For the purposes of consistency in our sample, the 2013 running of the Boston Marathon is removed, as a terrorist attack occurred during the running of the marathon, which likely affected the time of those finishing subsequent to the attack.

:::{.content-hidden}
*TODO*
[x] Note how age groups were determined 
[x] To refine and add to paragraph above: Began by using USATF 5 year age groups and aggregated them to larger groups to facilitate readable visualizations (cite https://www.runnersworld.com/races-places/a20794726/age-and-weight-groups-com/). Note that we aggregate them in such a way that ages 25-34 are in the same group rather than splitting age 20-29 and 30-39 as peak marathon performance is known to generally occur between ages 25 and 35 (cite https://pubmed.ncbi.nlm.nih.gov/17465594/).

[x] Add citations noted above to references.bib and correctly cite in Quarto


***Reflection***
It is important to explain all data manipulation and aggregation decisions, regardless of if they are to be used for visualizations, modeling, or both. 

:::

We note that Dr. Ely’s analysis indicated that ninety-two race years yielded 6,112 male finishers, ages 14 to 91, and 5,452 female finishers, ages 14 to 88. We observe different numbers of unique marathon and year pairings (the number of marathons for which data is collected) depending on the source of the data; `r nrow(unique(course_record[, c("Year", "Race")]))` in the course records dataset, `r nrow(unique(marathon_dates[, c("year", "marathon")]))` in the marathon dates dataset, `r nrow(unique(aqi_values[, c("date_local", "marathon")]))` in the ACS AQI dataset, and `r nrow(unique(marathon_data[, c("Race", "Year")]))` in the core marathon dataset. This results in `r nrow(unique(data[, c("Race", "Year")]))` race years in our final dataset, which does not conform to Dr. Ely's preliminary analysis, indicating a possible data processing error or misstatement. Our dataset includes `r nrow(unique(data[, c("Race", "Year")]))` races but the same number of male and female finishers (`r prettyNum(nrow(data[data$Sex == "Male", ]), big.mark=",")` and `r prettyNum(nrow(data[data$Sex == "Female", ]), big.mark=",")` respectively) as noted by Dr. Ely. Our data also contains the same age range for males (ages `r min(data$Age[data$Sex == "Male"])` to `r max(data$Age[data$Sex == "Male"])`) as cited by Dr. Ely, but a different range for females (ages `r min(data$Age[data$Sex == "Female"])` to `r max(data$Age[data$Sex == "Female"])`). These discrepancies support the idea that the 92 race years cited initially was a misstatement, and that data processing issues may exist.


```{r data cleaning: sample / observation counts, echo=F, eval=F}
# NOTE: This cell is not evaluated or printed in the report, but commentary on 
# the results is provided in prose.

# Number of races in each dataset
nrow(unique(course_record[, c("Year", "Race")]))
nrow(unique(marathon_dates[, c("year", "marathon")]))
nrow(unique(aqi_values[, c("date_local", "marathon")]))
nrow(unique(marathon_data[, c("Race", "Year")]))
nrow(unique(data[, c("Race", "Year")]))

# Number of observations by race
nrow(data[data$Race == "Boston Marathon", ])
nrow(data[data$Race == "Chicago Marathon", ])
nrow(data[data$Race == "New York City Marathon", ])
nrow(data[data$Race == "Twin Cities Marathon (Minneapolis, MN)", ])
nrow(data[data$Race == "Grandma's Marathon (Duluth, MN)", ])

```



Plausibility checks are also performed to ensure proper variable coding in terms of units and potential data entry errors. Histograms are examined for continuous variables but omitted for space. Categorical variables (e.g., `Sex`) are checked to ensure that they only contain the factor levels that they are allowed to take by the codebook. Plausible ranges are defined as follows: 13 to 100 years for `Age`; -10% to 400% for `% CR`; world record pace (2:00:35 for men, 2:11:53 for women) to 10 hours for `Time`; -18 to 42 degrees Celsius for `Td, C`, `Tw, C`, and `Tg, C`; 5% to 100% for `% RH`; 0 to 1500 W/m2 for `SR W/m2`; -30 to 36 degrees Celsius for `DP`; 0 to 150 Km/hr `Wind`; -18 to 42 degrees Celsius for `WBGT`; and 5 to 500 for `AQI`.

Some variables do not pass sanity checks and therefore must be evaluated further, specifically: `% CR`, with a maximum value of approximately %420; `Time`, with a maximum value of over 10 hours; `Tg, C`, with a maximum value of 44 degrees Celsius, or 111 degrees Fahrenheit; and `% RH`, with multiple values under 5%. A single `Tg, C` value of approximately 111 degrees Fahrenheit is not entirely implausible given that `Tg, C` incorporates solar energy and thus can be higher on a sunny race day than intuition might suggest. Some values of `% RH`, which should be number from 0-100, have been miscoded as between 0 and 1; we take all `% RH` values between 0 and 1 and multiply by 100 to rectify this issue.

For data cleaning, `Time` is examined extensively because of its tangible units. None of the times were faster than world record pace by gender, but there were two finishers over 10 hours (approx. 2.6 mph pace) and several over 9 (approx. 2.9 mph pace). All finishers over 10 hours are 83 years old. All finishers over 9 hours are 74 or older. These times could represent people who do not share common factors with the other runners and might therefore weaken or bias the conclusions. However, running can be defined as ambulating wherein at a given moment in a stride, neither foot is making contact with the ground; this definition has no minimum speed. Thus we do not remove any observations based on their finishing times. 

None of these slow finishers are in the Boston Marathon, emphasizing its status as the most different from the other races. The five races have different qualification criteria; Boston is known to have the strictest qualifying standards. We can assume that top-level runners are running each marathon, but lower-level runners, who are slow relative to top overall finishers, but nevertheless finish first in their age and gender bracket, may qualify for some but not all marathons. This heterogeneity in marathon samples is a persistent issue in our analysis which we discuss in more depth below. We choose not to exclude the slow finishers here, but this specific issue (as well as the general issue of the marathon races not having similar samples) should be explored in more depth in an additional analysis.








```{r plausibility, echo=F, eval=F}

# Check Race
valid_races <- c("Boston Marathon",
                "Chicago Marathon",
                "New York City Marathon",
                "Twin Cities Marathon (Minneapolis, MN)",
                "Grandma's Marathon (Duluth, MN)")
race_check <- all(data$Race %in% valid_races)
if (!race_check) {
  print("Race values invalid")
} else { 
  print("Check passed")
}


# Check Sex 
valid_sex <- c("Male","Female")
sex_check <- all(data$Sex %in% valid_sex)
if (!sex_check) {
  print("Sex values invalid")
} else { 
  print("Check passed")
}


# Check Age (plausible range: 13 to 100)
age_check <- all(data$Age >= 13 & data$Age <= 100, na.rm = T)
if (!age_check) {
  print("Age out of plausible range (13 to 100 years)")
} else { 
  print("Check passed")
}


# Check Flag 
# Note: Fails check without explicit NA, missing data in Flag
valid_flags <- c("White", "Green", "Yellow", "Red", "Black", NA)
flag_check <- all(data$Flag %in% valid_flags)
if (!flag_check) {
  print("Invalid Flag values")
} else { 
  print("Check passed")
}


# Check % CR
# Note: This check fails, max % CR is ~420%, investigate. 
cr_check <- all(data$`% CR` >= -10 & data$`% CR` <= 400, na.rm = T)
if (!cr_check) {
  print("% CR values out of plausible range (-10 to 400)")
} else { 
  print("Check passed")
}

range(data$`% CR`) # Check range for % CR




# Check Time (plausible range: minimum is WR pace, maximum is 10 Hours)
# Note: This check fails, max time is over 10 hours
# Note: WR marathon pace is 2:00:35 for men, 2:11:53 for women
# Note: Split by men/women
time_check_m <- all(data$`Time` >= 7235 & data$`Time` <= 36000 & data$Sex=="Male",
                  na.rm = T)
if (!time_check_m) {
  print("Time values out of plausible range (WR to 10hrs)")
} else { 
  print("Check passed")
}

time_check_f <- all(data$`Time` >= 7913 & data$`Time` <= 36000 & data$Sex=="Female",
                  na.rm = T)
if (!time_check_f) {
  print("Time values out of plausible range (WR to 10hrs)")
} else { 
  print("Check passed")
}

range(lubridate::period_to_seconds(hms(data$Time))) # Check range for Time

hms::as_hms(range(lubridate::period_to_seconds(hms(data$Time)))[1]) # Min Time
hms::as_hms(range(lubridate::period_to_seconds(hms(data$Time)))[2]) # Max Time

# Time Subcheck: Slow finishers
data %>% dplyr::filter(Time > 36000) %>% kbl # Table for all finishers over 10hrs
data %>% dplyr::filter(Time > 32400) %>% kbl # Table for all finishers over 9hrs
# Note: 10hrs is a 2.62 mph pace, 9hrs is a 2.91 mph pace


# Time Subcheck: Fast finishers 
data %>% # Table for all finishers under WR (M)
  dplyr::filter(Time < 7235 & Sex == "Male") %>% kbl 
# Note: no results, good

data %>% # Table for all finishers under WR (F)
  dplyr::filter(Time < 7913 & Sex == "Female") %>% kbl 
# Note: no results, good





# Check Td, C (plausible range: -18 to 42)
td_check <- all(data$`Td, C` >= -18 & data$`Td, C` <= 42, na.rm = T)
if (!td_check) {
  print("Dry bulb temperature out of plausible range (-18 to 42C)")
} else { 
  print("Check passed")
}





# Check Tw, C (plausible range: -18 to 42)
tw_check <- all(data$`Tw, C` >= -18 & data$`Tw, C` <= 42, na.rm = T)
if (!tw_check) {
  print("Wet bulb temperature out of plausible range (-18 to 42C)")
} else { 
  print("Check passed")
}





# Check Tg, C (plausible range: -18 to 42)
# Note: This fails because max is 44C, which is 111F, investigate. 
tg_check <- all(data$`Tg, C` >= -18 & data$`Tg, C` <= 42, na.rm = T)
if (!tg_check) {
  print("Globe temperature out of plausible range (-18 to 42C)")
} else { 
  print("Check passed")
}

range(data$`Tg, C`, na.rm = T) # Check range for Tg, C


# Check % RH (plausible range: 5 and 100)
# Note: This fails because many values under 5%, investigate. 
rh_check <- all(data$`% RH` >= 5 & data$`% RH` <= 100, na.rm = T)
if (!rh_check) {
  print("Relative humidity out of range (0-100%)")
} else { 
  print("Check passed")
}

range(data$`% RH`, na.rm = T) # Check range for % RH




# Check SR W/m2 (should be non-negative, plausible max around 1500)
sr_check <- all(data$SR >= 0 & data$SR <= 1500, na.rm = T)
if (!sr_check) {
  print("Solar radiation out of plausible range (0 to 1500 W/m2)")
} else { 
  print("Check passed")
}




# Check DP (plausible range: -30 to 35)
dp_check <- all(data$DP >= -30 & data$DP <= 35, na.rm = T)
if (!dp_check) {
  print("Dew point out of plausible range (-30 to 35C)")
} else { 
  print("Check passed")
}





# Check Wind (should be non-negative, plausible max around 150 km/h)
wind_check <- all(data$Wind >= 0 & data$Wind <= 150, na.rm = T)
if (!wind_check) {
  print("Wind speed out of plausible range (0 to 150 km/h)")
} else { 
  print("Check passed")
}




# Check WBGT (plausible range: -18 to 42)
wbgt_check <- all(data$WBGT >= -18 & data$WBGT <= 42, na.rm = T)
if (!wbgt_check) {
  print("WBGT out of plausible range (-18 to 42C)")
} else { 
  print("Check passed")
}




# Check AQI (plausible range: 5 to 500)
aqi_check <- all(marathon_data$AQI >= 5 & marathon_data$AQI <= 500, na.rm = T)
if (!aqi_check) {
  print("AQI out of plausible range (5 to 500)")
} else { 
  print("Check passed")
}




```

```{r hist plots, echo=F, eval=F}
# NOTE: This cell is not evaluated or printed in the report, but commentary on 
# the results is provided in prose.

# Histograms for variables
hist(data$Year)
hist(data$Age)
hist(data$`% CR`)
hist(lubridate::period_to_seconds(hms(data$Time)))
hist(data$`Td, C`)
hist(data$`Tw, C`)
hist(data$`% RH`)
hist(data$`Tg, C`)
hist(data$`SR W/m2`)
hist(data$`DP`)
hist(data$`Wind`)
hist(data$`WBGT`)
hist(data$`AQI`)


```



```{r fixes based on sanity checks}

# Recoding % RH
data <- data %>% mutate(`% RH` = if_else(`% RH` <= 1, `% RH` * 100, `% RH`))



```




```{r remove year}

# Remove Boston Marathon Bombing year
data <- data %>%
  filter(Race != 'Boston Marathon' | Year != 2013)

```






### 2.3 Assessing & Handling Missing Data


```{r missingness viz, fig.cap="Data & Missingness Visualization", fig.height=2.3, eval = F, echo = F}
#| label: fig-visdat
#| fig-cap: "Data & Missingness Visualization"

# Visualize dataset & missingness
vis_dat(data) + ylim(0, 11600) + theme(
  plot.margin = margin(0, 0, 0, 0), 
  axis.text.y = element_blank(),
  axis.title.y = element_blank() 
)

```

```{r missing pattern by year / race}
# Check missing data years and marathons for patterns
missing_data <- data %>% 
  filter(if_any(everything(), is.na)) %>%  
  group_by(Race, Year) %>%
  summarize(Count = n(), .groups = 'drop')
 

```

We observe that there is missingness only in the weather variables, and that when one of these variables is missing, they are all missing within a given observation. This appears to be the case for discrete groups of observations, which we surmise to be for individual years. We note that data is missing in the year `r missing_data[1,2]` and `r missing_data[4,2]`. In `r missing_data[1,2]` there are `r missing_data[1,3]` observations with missing data for the Chicago Marathon, `r missing_data[2,3]` observations with missing data for the New York City Marathon, and `r missing_data[3,3]` observations with missing data for the Twin Cities Marathon (Minneapolis, MN). In `r missing_data[4,2]` there are `r missing_data[4,3]` observations with missing data for the Grandma's Marathon (Duluth, MN). This is likely an issue with missing data in the weather data source from the original core dataset. We observe that this missingness originates from weather missing in its entirety from four dates, each of which contains multiple runner-observations as noted above.

:::{.content-hidden}
*NOTE*
- Confirmed there are only four missing days in terms of weather data.

***Reflection***
In the above paragraph we have added the concept of runner-observations as to distinguish from race-observations, because each race is observed a certain number of times, but each race contains multiple runners. This distinction between race-level variables and runner-level variables was obfuscated in the first report version, and is fixed in multiple places in this update.
:::


Next we determine the missingness mechanism, i.e., whether data are Missing Completely at Random (MCAR), Missing at Random (MAR), or Missing Not at Random (MNAR). Tests are performed to confirm the type of missingness. Data is likely not MCAR, as indicated by Little's MCAR test. For each variable, a missing indicator is produced which takes values zero if missing and one if not missing. Subsequently, this missing indicator is regressed on all variables (excluding the variable from which the given missing indicator is produced). If any of the predictor variables are significant ($\alpha = 0.05$), we consider this evidence against a MAR designation for the variable from which the missing indicator was produced, and would be considered a test failure (the opposite case being test passage). When this procedure is run for our dataset, we note that each variable passes this test. This is evidence that the missing data is MAR, although we cannot be certain because the data could be MNAR due to unobserved covariates which our test procedure cannot check. We proceed under a MAR assumption.


:::{.content-hidden}
*TODO*
[x] Fix explanation of MAR check / test procedure

***Reflection***
We updated our explanation of our usage of a custom procedure to gain evidence that variables in our dataset are MAR with respect to observed covariates. Our previous explanation obfuscated the procedure we used, which is not good research as it does not allow the reader to follow the logic or reproduce our procedure.
:::



```{r missingness mechanism, echo = F, eval = F}

# Test for MCAR
naniar::mcar_test(data)

# Test for MAR
check_mar(data)


```



Finally, where missing data was minimal, we consider whether to remove those records. Given that the missing data is from a relatively small subset of the sample, and the strong evidence of MAR, missing data is excluded from our analysis. Imputation was considered, but due to the small amount of missing data relative to the sample size, we opt to exclude. Additionally, data is potentially recoverable from historical sources, but there is no R package to accomplish this, and because we do not know how the geographies were defined for the original weather data, adding weather data could be more biasing than simply dropping the records.




## 3. Exploratory Data Analysis

### 3.1 Comprehensive Descriptive Statistics

Beginning with observations applicable to multiple variables, no variables pass the Shapiro-Wilk test for normality. This is not necessarily a problem for our future modeling strategies, as linear models do not assume normally distributed variables, but do assume normally distributed errors and linear relationships between explanatory and response variables. Q-Q plots were checked in relation to normality for variables, but are omitted for space; normality results are discussed herein. The large sample size of this dataset ($n \geq 5000$) means all statistical tests could potentially appear significant at higher rates than for a lower sample size, given the large amount of data on which to base the distributional assessment. Small deviations from normal in the sampling distribution could cause said distribution to be identified as non-normal, whereas in smaller samples, those deviations might be identified as borderline cases instead. Performance metric `% CR` (and therefore `Time`) contain outliers; as discussed above, we elect not to remove the outliers for `% CR` and `Time` values from the sample.




```{r table 1a}
#| label: tbl-1a
#| tbl-cap: "Summary of Performance Variables" 
# Note: using tbl-cap rather than caption= in kbl() breaks repeated title is span page

# Table 1a
summary_table(data[-7:-20]) %>%
  kbl(#caption = "Summary of Variables", # Conflicts with Quarto referencing
      booktabs = T,
      longtable = T, # LONGTABLE
      escape = T,
      align = "c") %>%
  column_spec(1, width="2.2cm", latex_valign = "m") %>%
  column_spec(2, width="1.0cm", latex_valign = "m") %>%
  column_spec(3, width="6.67cm", latex_valign = "m") %>%
  column_spec(4, width="1.0cm", latex_valign = "m") %>%
  column_spec(5, width="1.0cm", latex_valign = "m") %>%
  column_spec(6, width="1.25cm", latex_valign = "m") %>%
  column_spec(7, width="1.25cm", latex_valign = "m") %>%
  kable_styling(
    font_size = 7.6, # Added for LONGTABLE
    latex_options = c(#'HOLD_position', # Removed for LONGTABLE
    #'scale_down', # Removed for LONGTABLE
    "repeat_header",  # Added for LONGTABLE
    'striped'), 
    full_width = F, # Note: TRUE does not work with LONGTABLE
    position = 'center'# Added for LONGTABLE
  ) %>%
  footnote(general = "Shapiro-Wilk test for normality;
             Grubb's test for outliers.", escape = F)



```


Full individual variable details are omitted, data is available in [@tbl-1a] and [@tbl-1b]. Both `Age` and `Year` are non-normal, non-outlier producing, platykurtic and centered, similar to a Uniform distribution. `Age Group` for 0-17 years has a very small sample. For `% CR`, the outliers are discussed above; that it is leptokurtic and right-skewed suggests a not insignificant number of slow finishers ([-@tbl-1a]). `Flag` has 2,000 or more runner-observations for white, green, and yellow flags, but only 592 red and no black flag runner-observations. The red flag runner-observations represent five marathon events: Boston '12, Chicago '07, Twin Cities '07, Grandma's '06, and Grandma's '16. Taken together, this suggests an issue with `Flag` as a predictor due to the imbalanced classes ([-@tbl-1b]).

:::{.content-hidden}
*TODO*
[x] Update flag day language in paragraph above to note difference between runner-observations and marathon days (592 red flag observations, but that is from only five races)

***Reflection***
Careful terminology must be used when dealing with a hierarchical dataset because the general terms like 'observation' could be used to refer to different levels of aggregation in the dataset (ex: and observation could be a marathon or a single runner's race depending on usage and context).
:::


```{r table 1b}
#| label: tbl-1b
#| tbl-cap: "Summary of Race-level Variables" 

# Table 1b
 
data_by_race <- data %>%
  group_by(Race, Year) %>%
  summarise(
    Flag = if_else(n_distinct(Flag) == 1, unique(Flag), NA_character_),
    WBGT = if_else(n_distinct(WBGT) == 1, unique(WBGT), NA_real_),
    `% RH` = if_else(n_distinct(`% RH`) == 1, unique(`% RH`), NA_real_),
    `SR W/m2` = if_else(n_distinct(`SR W/m2`) == 1, unique(`SR W/m2`), NA_real_),
    Wind = if_else(n_distinct(Wind) == 1, unique(Wind), NA_real_),
    AQI = if_else(n_distinct(AQI) == 1, unique(AQI), NA_real_)
  ) %>%
  ungroup()
 
summary_table(data_by_race[-2]) %>%
  kbl(#caption = "Summary of Variables", # Conflicts with Quarto referencing
      booktabs = T,
      longtable = T, # LONGTABLE
      escape = T,
      align = "c") %>%
  column_spec(1, width="2.2cm", latex_valign = "m") %>%
  column_spec(2, width="1.0cm", latex_valign = "m") %>%
  column_spec(3, width="6.67cm", latex_valign = "m") %>%
  column_spec(4, width="1.0cm", latex_valign = "m") %>%
  column_spec(5, width="1.0cm", latex_valign = "m") %>%
  column_spec(6, width="1.25cm", latex_valign = "m") %>%
  column_spec(7, width="1.25cm", latex_valign = "m") %>%
  kable_styling(
    font_size = 7.6, # Added for LONGTABLE
    latex_options = c(#'HOLD_position', # Removed for LONGTABLE
    #'scale_down', # Removed for LONGTABLE
    "repeat_header",  # Added for LONGTABLE
    'striped'), 
    full_width = F, # Note: TRUE does not work with LONGTABLE
    position = 'center'# Added for LONGTABLE
  ) %>%
  footnote(general = "Shapiro-Wilk test for normality;
             Grubb's test for outliers.", escape = F)




```

```{r q-q plots, echo=F, eval=F}
# NOTE: This cell is not evaluated or printed in the report, but commentary on 
# the results is provided in prose.

# Q-Q Plots for variables
qqPlot(data$Year)
qqPlot(data$Age)
qqPlot(data$`% CR`)
qqPlot(data$`Td, C`)
qqPlot(data$`Tw, C`)
qqPlot(data$`% RH`)
qqPlot(data$`Tg, C`)
qqPlot(data$`SR W/m2`)
qqPlot(data$`DP`)
qqPlot(data$`Wind`)
qqPlot(data$`WBGT`)
qqPlot(data$`AQI`)
```


We next look to variables by `Race` ([-@tbl-2a], [-@tbl-2b]). The Kruskal-Wallis test was performed for continued variables, the Chi-Square test was used for categorical variables, and Bonferroni correction for the P-values was applied for all. All variables other than `Sex` were statistically significantly different across `Race` from at least one other `Race` for a given variable. This suggests that the marathons are very different in terms of all variables other than `Sex`. `Age`, `% CR`, `Time`, and all environmental variables were significantly different across `Race`. For a future regression analysis, we note that these marathon samples are natural groups with potential unobserved differences between each marathon. It is appropriate to attempt to account for this by including a random effect for intercept by marathon. 


```{r table 2a}
#| label: tbl-2a
#| tbl-cap: "Summary of Performance Variables by Race"

# Table 2a
summary_table(data[,c(-5,-7:-20)], stratify_var = "Race") %>%
  kbl(#caption = "Summary of Variables by Race", # Conflicts with Quarto label
      booktabs = T,
      longtable = T, # LONGTABLE
      escape = T,
      align = "c") %>% 
  column_spec(1, width="2.21cm", latex_valign = "m") %>%
  column_spec(2, width="2.4cm", latex_valign = "m") %>%
  column_spec(3, width="2.4cm", latex_valign = "m") %>%
  column_spec(4, width="2.4cm", latex_valign = "m") %>%
  column_spec(5, width="2.4cm", latex_valign = "m") %>%  
  column_spec(6, width="2.4cm", latex_valign = "m") %>%
  column_spec(7, width=".35cm", latex_valign = "m") %>%
  kable_styling(
    font_size = 7.6, # Added for LONGTABLE
    latex_options = c(#'HOLD_position', # Removed for LONGTABLE
    #'scale_down', # Removed for LONGTABLE
    "repeat_header",  # Added for LONGTABLE
    'striped'), 
    full_width = F, # Note: TRUE does not work with LONGTABLE
    position = 'center'# Added for LONGTABLE
  ) %>%
  footnote(general = "ns = P > 0.05,
           * = P $\\\\leq$ 0.05,
           ** = P $\\\\leq$ 0.01,
           *** = P $\\\\leq$ 0.001,
           **** = P $\\\\leq$ 0.0001
           ", escape = F) %>%
  footnote(general = "Kruskal–Wallis test for continuous variables,
           Chi-Square test for categorical variables. 
           Bonferroni correction applied.", escape = F) 

```

Full individual variable details are omitted, data is available in [@tbl-2a] and [@tbl-2b]. The New York City Marathon is noticeably the oldest, which could introduce bias ([-@tbl-2a]). Grandma's Marathon, the only race in the summer, had significantly worse flag conditions and warmer temperatures. Chicago had the worst air quality. These are not all of the differences between races ([-@tbl-2b]). As our above analysis indicates, these samples are heterogeneous, in many ways more different than they are alike.


```{r table 2b}
#| label: tbl-2b
#| tbl-cap: "Summary of Racel-level Variables by Race"

# Table 2b
summary_table(data_by_race[-2], stratify_var = "Race") %>%
  kbl(#caption = "Summary of Variables by Race", # Conflicts with Quarto label
      booktabs = T,
      longtable = T, # LONGTABLE
      escape = T,
      align = "c") %>% 
  column_spec(1, width="2.21cm", latex_valign = "m") %>%
  column_spec(2, width="2.4cm", latex_valign = "m") %>%
  column_spec(3, width="2.4cm", latex_valign = "m") %>%
  column_spec(4, width="2.4cm", latex_valign = "m") %>%
  column_spec(5, width="2.4cm", latex_valign = "m") %>%  
  column_spec(6, width="2.4cm", latex_valign = "m") %>%
  column_spec(7, width=".35cm", latex_valign = "m") %>%
  kable_styling(
    font_size = 7.6, # Added for LONGTABLE
    latex_options = c(#'HOLD_position', # Removed for LONGTABLE
    #'scale_down', # Removed for LONGTABLE
    "repeat_header",  # Added for LONGTABLE
    'striped'), 
    full_width = F, # Note: TRUE does not work with LONGTABLE
    position = 'center'# Added for LONGTABLE
  ) %>%
  footnote(general = "ns = P > 0.05,
           * = P $\\\\leq$ 0.05,
           ** = P $\\\\leq$ 0.01,
           *** = P $\\\\leq$ 0.001,
           **** = P $\\\\leq$ 0.0001
           ", escape = F) %>%
  footnote(general = "Kruskal–Wallis test for continuous variables,
           Chi-Square test for categorical variables. 
           Bonferroni correction applied.", escape = F) 

```



We next examine variables by levels of `Sex` (table omitted for space). Student's T-test was used for continuous variables and the Chi-Square test was used for categorical variables. No Bonferroni correction was applied because there are only two groups. There were no statistically significant differences across variables by `Sex`, with the exception of `Age`. Men were statistically significantly older, with a mean age of 47.8 years compared to a mean age of 45.0 years for women.

```{r table X, echo = F, eval = F}
# Table X
summary_table(data[,c(-5,-17:-20)], stratify_var = "Sex") %>%
  kbl(caption = "Summary of Variables by Sex",
      booktabs = T,
      escape = T,
      align = "c") %>%
  column_spec(1, width="3cm", latex_valign = "m") %>%
  column_spec(2, width="8cm", latex_valign = "m") %>%
  column_spec(3, width="8cm", latex_valign = "m") %>%
  column_spec(4, width=".7cm", latex_valign = "m") %>%
 kable_styling(latex_options = c('HOLD_position',
                                 'scale_down',
                                 'striped')) %>%
  footnote(general = "ns = P > 0.05,
           * = P $\\\\leq$ 0.05,
           ** = P $\\\\leq$ 0.01,
           *** = P $\\\\leq$ 0.001,
           **** = P $\\\\leq$ 0.0001
           ", escape = F) %>%
  footnote(general = "Student's T-test for continuous variables,
           Chi-Square test for categorical variables.", escape = F)

```

Next, we consider differences in variables by `Age Group` (table omitted for space). The Kruskal-Wallis test was performed for continued variables, the Chi-Square test was used for categorical variables, and Bonferroni correction for the P-values was applied for all. There are significant differences by `Age Group` across all variables other than `Year`, `Flag` and `AQI`. Between ages 18-69 years, the five marathons are generally comparable to each other, it is outside this range that large differences occur. The New York City Marathon has proportionally many more individuals age 70 or older (40.3% of the age 70+ sample), which is supported by the analysis in @tbl-2a indicating that it has the oldest average age. Interestingly, in the age 70 or older group there are many more men than women (70.0% men and 30.0% women compared to 52.8% male and 47.2% female in the total sample), a potential source of bias. Boston has the fewest individuals under 18 (6.2% of the age 0-17 sample), followed by New York City (9.8% of the age 0-17 sample). Twin Cities and Grandma's Marathons have notably higher numbers of individuals under 18 (24.5% and 30.3% of the age 0-17 sample). The significant differences in environmental variables ([-@tbl-2b]) are likely caused by Grandma's Marathon being over-sampled for individuals under 18 years of age and taking place during the summer, and thus having the highest temperatures, as discussed above. It is notable that different age groups do not experience significantly different levels of AQI.


```{r table Y, echo = F, eval = F}
# Table Y
summary_table(data[,c(-4,-17:-20)], stratify_var = "Age Group") %>%
  kbl(caption = "Summary of Variables by Age Group",
      booktabs = T,
      escape = T,
      align = "c") %>%
  column_spec(1, width="2.75cm", latex_valign = "m") %>%
  column_spec(2, width="4cm", latex_valign = "m") %>%
  column_spec(3, width="4cm", latex_valign = "m") %>%
  column_spec(4, width="4cm", latex_valign = "m") %>%
  column_spec(5, width="4cm", latex_valign = "m") %>%
  column_spec(6, width="4cm", latex_valign = "m") %>%
  column_spec(7, width="4cm", latex_valign = "m") %>%
  column_spec(8, width="4cm", latex_valign = "m") %>%
  column_spec(9, width=".7cm", latex_valign = "m") %>%
  kable_styling(latex_options = c('HOLD_position',
                                  'scale_down',
                                 'striped')) %>%
  footnote(general = "ns = P > 0.05,
           * = P $\\\\leq$ 0.05,
           ** = P $\\\\leq$ 0.01,
           *** = P $\\\\leq$ 0.001,
           **** = P $\\\\leq$ 0.0001
           ", escape = F) %>%
  footnote(general = "Kruskal–Wallis test for continuous variables,
           Chi-Square test for categorical variables.
           Bonferroni correction applied.", escape = F) 

```





### 3.2 Correlation & Multicollinearity Analysis



```{r corr mat, fig.cap = "Correlation Matrix", fig.width=6.3}
#| label: fig-corr

# Generate psuedo correlation matrix
psuedo_cor_matrix <- psuedo_cor_mat(data[-18:-20])

# Plot the heatmap (with variable names and values)
ggplot(melt(psuedo_cor_matrix), aes(x = Var2, y = Var1, fill = value)) +
  geom_tile(color = "white") +  
  geom_text(aes(label = sprintf("%.2f", value)), size = 2, color = "black") +
  scale_fill_gradient2(low = "blue",
                       high = "red",
                       mid = "white",
                       midpoint = 0,
                       limits = c(-1, 1),
                       space = "Lab",
                       name = "Correlation") +
  theme_minimal() +
  labs(x = "", y = "") +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 7.5),
        axis.ticks.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(angle = 45, hjust = 1, size = 7.5),
        legend.position="none") +  
  coord_fixed(ratio = .55)

```



```{r vif, eval = F, echo = F}

# Calculate VIF
print(vif(lm(`% CR` ~ Race + Sex + Age + Flag + `Td, C` + `Tw, C` +
              `Tg, C` + `DP` + `WBGT` + `% RH` + `SR W/m2` + Wind + AQI,
             data = data)))
# Error: there are aliased coefficients in the model (perfect colinearity)


# Calculate VIF
print(vif(lm(`% CR` ~ Race + Sex + Age + `WBGT` + `% RH` +
               `SR W/m2` + Wind + AQI, data = data)))
# Note: For this combination of variables all adjusted VIF are below 2 (threshold)

```


```{r remove colinear and redundant vars}
data <- data %>% 
  select(-`Td, C`, -`Tw, C`, -`Tg, C`, -`DP`, # Remove colinear weather vars
                         `Date`) # Remove redundant vars

```

As might be expected, `WBGT` and the variables that are used to compute it are highly correlated. `WBGT` and the dew point measurement `DP` are also highly correlated; this is likely because `Tw, C`, the wet-bulb temperature, factors in humidity, of which dew point is a measure. Interestingly, `WBGT` is not highly correlated with `% RH`, despite relative humidity being a measurement of the moisture in the air, nor with `SR W/m2`, despite the solar radiation being included within `Tg, C`, itself a factor in `WBGT`. `Wind` is positively correlated with `Flag` but negatively correlated with all temperature and humidity variables. Although `Flag` is based on `WBGT`, it also appears to take into account wind conditions in a manner that is not immediately clear; this is a potential area of refinement in future study. Finally, as discussed above and shown in various tables, `Race` is moderately correlated with all environmental variables, which is a potential limitation in our study, because the races are conducted under different environmental conditions. 

Variance inflation factor (VIF) is calculated for all variables. Initial checks for multicollinearity indicate perfect collinearity between some variables. Based on @fig-corr, we see that these variables are likely to be the temperature variables and `DP`. We remove all variables which are highly correlated with the main or primary hypothesized explanatory variable `WBGT` from the dataset. Removing these variables alleviates indicated collinearity issues in all potential future regression analysis. One exception is that we choose to retain the `Flag` variable for use in charting below. `Flag` is purportedly a straightforward quantization of `WBGT` similar to `Age Group` and `AQI Level`, and while these variables remain in the dataset, they will not be used in modeling intended to answer the aims.

## 4. Specific Aim Analyses

### Aim 1: Examine Effects of Increasing Age on Marathon Performance in Men and Women

:::{.content-hidden}
*TODO* **Aim 1**
[x] Expand model explanations
[x] Add tables for model results
[x] Code: replace figure 4 with normalized difference in % CR by Age with facet by race
[x] Make sure variable names are consistent

***Reflection***

We replaced prior charting which was difficult to read and interpret. The new version makes use of the normalized difference (by age) in % CR (which is already itself stratified by sex). The normalized difference makes it much easier to visually see the separation between men and women, as well as the trend in terms of age dynamics. 

:::


::: {.content-hidden}
Note: "vspace" below reduces space between paragraph and figures. 
:::
\vspace{-2mm} 

\bunevencol


```{r performance v age, fig.cap="% CR vs. Age", fig.height=4.3}
# Plotting Performance vs. Age 
ggplot(data, aes(x = Age, y = `% CR`, color = Sex)) +
    geom_point(alpha = .18, shape = 21, show.legend = F) +
    geom_smooth(data = data, aes(group = Sex), method = "loess", se = F, 
                color = "black", linewidth = 1.3) +
    geom_smooth(data = data, aes(color = Sex), method = "loess", se = F, 
                linewidth = .7, show.legend = TRUE) +
    labs(x = "Age",
         y = "% CR",
         color = "Sex") +
    theme_minimal() +
    scale_color_manual(values = c("Female" = "lightpink2", "Male" = "lightblue2")) +
    guides(color = guide_legend(override.aes = list(linewidth = 1.5))) +
  theme(legend.position = "bottom") + ylim(-5,260)

```

\middleunevencol 

```{r performance norm v age by race, fig.cap="Normalized Difference % CR vs. Age by Race", echo = F, eval = T, fig.height=2.8}


race_labels <- c(
  "Boston Marathon" = "Boston Marathon",
  "Chicago Marathon" = "Chicago Marathon",
  "New York City Marathon" = "NYC Marathon",
  "Twin Cities Marathon (Minneapolis, MN)" = "Twin Cities Marathon",
  "Grandma's Marathon (Duluth, MN)" = "Grandma's Marathon")


# calc normalized differences (in % CR for each age)
# NOTE: we considered normalizing also by sex, but % CR is already relative to sex
data_norm <- data %>%
  group_by(Age) %>%
  mutate(mean_cr = mean(`% CR`)) %>%
  ungroup() %>%
  mutate(norm_diff = `% CR` - mean_cr)

data_overall <- data_norm %>%
  mutate(Race = "Overall")

data_combined <- bind_rows(data_norm, data_overall) %>%
  mutate(Race = factor(Race, levels = c(
    "Overall",
    "Boston Marathon",
    "Chicago Marathon", 
    "New York City Marathon",
    "Twin Cities Marathon (Minneapolis, MN)",
    "Grandma's Marathon (Duluth, MN)"
  )))


ggplot(data_combined, aes(x = Age, y = norm_diff, color = Sex)) +
  geom_point(alpha = 0.048, shape = 21, show.legend = F) +
  geom_smooth(data = data_combined, aes(group = Sex), method = "loess", se = F, 
              color = "black", linewidth = 1) +  
  geom_smooth(method = "loess", se = FALSE, linewidth = .55) +
  facet_wrap(~ Race, labeller = labeller(Race = race_labels), 
             ncol = 3, dir = "h") +
  scale_color_manual(values = c("Female" = "lightpink2", "Male" = "lightblue2")) +
  labs(x = "Age",
       y = "Normalized Difference % CR",
       color = "Sex") +
  theme_minimal() +
  theme(
    legend.position = "none",
    panel.grid.minor = element_blank(),
    axis.text = element_text(size = 6),
    axis.title = element_text(size = 6.8),
    legend.text = element_text(size = 6),
    legend.title = element_text(size = 6.8),
    strip.text = element_text(size = 7)
  ) +
  coord_cartesian(ylim = c(-30, 30))

```


```{r performance v age by race, fig.cap="Performance vs. Age by Race", echo = F, eval = F, fig.height=2.8}

# NOTE: Removed this plot in final revision

# Plotting Performance vs. Age by Race
ggplot(data, aes(x = Age, y = `% CR`, color = Sex)) +
  geom_point(alpha = 0, shape = 21, show.legend = F) +
  geom_smooth(data = data, aes(group = Sex), method = "loess", se = F, 
              color = "black", linewidth = 1) +
  geom_smooth(data = data, aes(color = Sex), method = "loess", se = F, 
              linewidth = .55, show.legend = TRUE) +
  labs(x = "Age",
       y = "% CR",
       color = "Sex") +
  theme_minimal() +
  scale_color_manual(values = c("Female" = "lightpink2", "Male" = "lightblue2")) +
  guides(color = guide_legend(override.aes = list(linewidth = 1.5))) +
  facet_wrap(~ Race, labeller = labeller(Race = race_labels)) +
  theme(legend.position = "none",
          plot.margin = margin(t = 0, 
                             r = 0, 
                             b = 0, 
                             l = 0,  
                             unit = "mm")) + ylim(-5,250)

```



\eunevencol



```{r aim 1: regression modeling}

# Convert `Time` & `CR` to Second for Modeling
data$Time <- lubridate::period_to_seconds(hms(data$Time))
data$CR <- lubridate::period_to_seconds(hms(data$CR))

# Aim 1: Model
aim1m1 <- lmer(Time ~ CR + Year + Sex + Age + I(Age^2)
                + Sex * Age + Sex * I(Age^2) + (1 | Race), data = data)

```


A scatter plots of % CR vs. age, with different colors for sex, as well as scatter plots of normalized difference in % CR by sex for each race are included for interpretation. There is an evident U-shaped, curvilinear, relationship between age and % CR, which will inform modeling decisions (i.e., a polynomial term for age will be included in all models). Based on the visualizations, we see that the curvilinear relationship between age and performance is likely more pronounced for women than men, with women accelerating towards optimal finishing time faster as they approach optimal age, and decelerating faster as they age. It is also notable from the above that the gap between men and women appears to increase substantially around age 50, before gradually narrowing again as can been seen in the figures above. For correlations, we refer to the correlation matrix [@fig-corr] and note that for bivariate correlation, there is no correlation between sex and % CR (Correlation = 0.00). This is a consequence of marathon course records, and therefore `% CR`, being categorized separately for males and females. This does not preclude a more complex relationship between sex, age, and % CR, which we will explore below. We observe a strong correlation between age and % CR (Correlation = 0.70), which is supported by physiological theory. 
 
We conduct preliminary linear mixed effects regression modeling to aid in answering this aim. Note that we use `Time` as our response variable rather than `% CR` because the latter is computed separately by gender, which could bias our results when including `Sex` and associated interaction terms in the model. To accurately model the complex relationship between gender and age we include quadratic terms for `Age` and both the linear interaction of `Sex` and `Age` as well as the interaction between `Sex` and quadratic `Age`. We include a random slope for `Race` and include as controls `CR` and `Year` to adjust for the differential difficulty between race courses and across years.


\btwocol

```{r}


fixed_effects <- tidy(aim1m1, effects = "fixed")

random_effects <- tidy(aim1m1, effects = "ran_pars")

fixed_effects %>% 
  dplyr::select (-c(effect, std.error, statistic, df)) %>% 
  filter(!(term %in% c("(Intercept)"))) %>%
  kbl(
  digits = 3,
  caption = "Fixed Effects of Model for Aim 1",
  booktabs = TRUE) %>%  kable_styling(font_size = 7.6)



```

```{r, eval = F}
kable(
  random_effects,
  digits = 3,
  caption = "Random Effects of Mixed-Effects Model for Aim 1",
  booktabs = TRUE
)



```



```{r, fig.cap="Predicted Times by Age and Sex", fig.height=2.7}

ages <- seq(min(data$Age, na.rm = TRUE), max(data$Age, na.rm = TRUE), length.out = 100)

new_data <- expand.grid(
  Age = ages,
  Sex = c("Female", "Male"),
  CR = mean(data$CR, na.rm = TRUE),
  Year = mean(data$Year, na.rm = TRUE),
  Race = unique(data$Race)[1]  
)

new_data$I_Age2 <- new_data$Age^2

new_data$Predicted <- predict(aim1m1, newdata = new_data, re.form = NA)

peak_age_women <- -fixef(aim1m1)["Age"] / (2 * fixef(aim1m1)["I(Age^2)"])
peak_age_men <- -(fixef(aim1m1)["Age"] + fixef(aim1m1)["SexMale:Age"]) / 
  (2 * (fixef(aim1m1)["I(Age^2)"] + fixef(aim1m1)["SexMale:I(Age^2)"]))


peak_points <- data.frame(
  Age = c(peak_age_women, peak_age_men),
  Predicted = predict(aim1m1, newdata = data.frame(
    Age = c(peak_age_women, peak_age_men),
    Sex = c("Female", "Male"),
    CR = mean(data$CR, na.rm = TRUE),
    Year = mean(data$Year, na.rm = TRUE),
    Race = unique(data$Race)[1],
    I_Age2 = c(peak_age_women^2, peak_age_men^2)
  ), re.form = NA),
  Sex = c("Female", "Male")
)

ggplot(new_data, aes(x = Age, y = Predicted, color = Sex)) +
  geom_line(size = 1) +
  geom_point(data = peak_points, aes(x = Age, y = Predicted),
             size = 3, shape = 21, fill = "white") +
  scale_color_manual(values = c("Female" = "lightpink2", "Male" = "lightblue2")) +
  labs(
    x = "Age",
    y = "Predicted Time (seconds)"
  ) +
  theme_minimal() + theme(legend.position = "right")
```

\etwocol



General interpretation of the results is as follows: our model indicates that performance follows a U-shaped curve with age for both sexes, as evidenced by the significant positive quadratic term for Age (7.055, p<0.001). The curve is more pronounced for women, shown by the negative interaction between Sex:Male and Age^2 (-0.836, p<0.001). Women reach peak performance slightly earlier (around 35.4 years) compared to men (37.1 years). As in Dr. Ely's preliminary modeling, this is an overestimate of the age of peak performance likely caused by the inflexibility of the linear model. The base effect of age shows that women's performance improves rapidly in younger years (-499.767 seconds per year, p<0.001), while men's improvement is less dramatic (interaction term SexMale:Age shows 39.052 seconds slower improvement per year, p<0.001). As runners age beyond their peak, women's performance declines more rapidly than men's. Specifically, women's times increase by about 7.06 seconds per year squared, while men's increase by 6.22 seconds per year squared (difference due to the -0.836 Sex:Age^2 interaction). This results in a widening performance gap between sexes in older age groups, as clearly visible in Figure 4 where the curves diverge more substantially after age 50 (although our model is not able to replicate the stark divergence seen at age 50 between men and women observed above). The model also indicates a substantial baseline difference between sexes (SexMale coefficient -1453.512, p<0.001), though this main effect must be interpreted in conjunction with the interaction terms. There is a small but significant effect of year (-35.917, p<0.001), suggesting general performance improvements over time, and course record time (CR) has a positive relationship with finishing time (0.508, p=0.014), indicating that harder courses produce proportionally slower times across all ages and both sexes.

### Aim 2: Explore the Impact of Environmental Conditions on Marathon Performance, and Whether the Impact Differs Across Age and Gender

:::{.content-hidden}
*TODO* **Aim 2**
[x] Expand model explanations
[x] Add tables for model results
[x] Change plots to use normalized difference in % CR for readability
[x] Make sure variable names are consistent

***Reflection***
TBD
:::

Scatter plots were created to compare the normalized difference of % CR against environmental variables. We see that there are relationships between the environmental variables and normalized difference in the percent of course record ([-@fig-env]). We observe marginal or subtle differences in the patter of effect for these variables between men and women. The relationships are generally intuitive such as performance declining with increasing WBGT. However, other relationships are counterintuitive and non-linear, including relative humidity, AQI, and wind. We observe weak correlations between weather variables and performance [@fig-corr]. An additional plot of % CR by age, stratified by flag, is generated ([-@fig-flag]). We note that this plot indicates a possible relationship between performance and flag (and therefore likely a relationship between performance and WBGT). 


\vspace{-1mm} 

```{r performance v age by Flag, fig.cap="Performance vs. Age by Flag", echo = F, eval = T , fig.width=6.9, fig.height=2.3}
#| label: fig-flag


# Plotting Performance vs. Age by Flag
ggplot(data=subset(drop_na(data_norm)),
       aes(x = Age, y = norm_diff, color = Flag)) +
  geom_point(alpha = .14, shape = 21, show.legend = F) +
  geom_smooth(data = subset(drop_na(data_norm)),
                            aes(group = Flag), method = "loess", se = F, 
              color = "black", linewidth = 1.1) +
  geom_smooth(data = subset(drop_na(data_norm)),
                            aes(color = Flag), method = "loess", se = F, 
              linewidth = .6, show.legend = TRUE) +
    facet_wrap(~ Sex) +
  labs(x = "Age",
       y = "Normalized Difference % CR",
       color = "Flag") +
  theme_minimal() +
  scale_color_manual(values = c("White" = "white",
                                "Green" = "lightgreen",
                                "Yellow" = "lightgoldenrod",
                                "Red" = "lightcoral")) +
  guides(color = guide_legend(override.aes = list(linewidth = 1.5))) +
  theme(legend.position = "right",
          plot.margin = margin(t = 0,  # Top margin
                             r = 1,  # Right margin
                             b = 1,  # Bottom margin
                             l = 1,  # Left margin
                             unit = "mm")) + ylim (-4,28)



```



::: {.content-hidden}
Note: "vspace" below reduces space between figures. 
:::
\vspace{-2mm} 






```{r performance v weather, fig.cap="Performance vs. Weather by Sex", echo = F, eval = T, fig.height=2.3, fig.width=7.5}
#| label: fig-env

env_vars_long <- data_norm %>%
  select(Sex, norm_diff, WBGT, `% RH`, `SR W/m2`, Wind, AQI) %>%
  pivot_longer(
    cols = c(WBGT, `% RH`, `SR W/m2`, Wind, AQI),
    names_to = "Variable",
    values_to = "Value"
  )

env <- ggplot(env_vars_long, aes(x = Value, y = norm_diff, color = Sex)) +
  geom_point(alpha = .16, shape = 21, show.legend = TRUE) +
  geom_smooth(aes(group = Sex),
              method = "loess",
              se = F,
              color = "black",
              linewidth = 1.2) +
  geom_smooth(aes(fill = Sex),
              method = "loess",
              se = F,
              linewidth = 0.8,
              alpha = 0.8) +
  facet_wrap(~ Variable, scales = "free_x", ncol = 5) +
  labs(y = "Normalized Diff. % CR",
       x = "",
       color = "Sex") +
  theme_minimal() +
  scale_color_manual(values = c("Female" = "lightpink2", "Male" = "lightblue2")) +
  guides(color = guide_legend(override.aes = list(linewidth = 1.5))) +
  theme(
    strip.text = element_text(size = 8),
    axis.text = element_text(size = 7),
    legend.position = "bottom",
    panel.spacing = unit(1, "lines") 
  ) + ylim (-4,28) 

reposition_legend(env, x=0.36, y=0, just=c(0, +0.5), panel="guide-box-bottom")


```








```{r aim 2: regression modeling}
# Aim 2: Model 1
aim2m1 <- lmer(Time ~ CR + Year + Sex + Age + I(Age^2) + Sex * Age + Sex * I(Age^2) + 
                 WBGT + `% RH` + `SR W/m2` + Wind + AQI + (1 | Race),
              data = data)



# Aim 2: Model 2
aim2m2 <- lmer(Time ~ CR + Year + Sex + Age + I(Age^2) + Sex * Age + Sex * I(Age^2) + 
                 WBGT + WBGT * Sex + WBGT * Age +
                 `% RH` + `% RH` * Sex + `% RH` * Age +
                 `SR W/m2` +`SR W/m2` * Sex + `SR W/m2` * Age +
                 Wind + Wind * Sex + Wind * Age + 
                 AQI + AQI * Sex + AQI * Age + (1 | Race),
              data = data)

```

As above, we conduct preliminary linear mixed effects regression modeling to aid in answering this aim. We produce two models, one with interactions between environmental variables and `Age` as well as between environmental variable and `Sex`, and one without. General interpretation of the results is as follows. For the model without interactions (Table 6), we found that environmental conditions significantly impact marathon performance. Higher WBGT and stronger wind slow runners down (32.847 seconds per `WBGT` unit, p<0.001 and 11.755 seconds per `Wind` unit, p=0.005, respectively). Surprisingly, higher humidity is associated with slightly faster times (-4.593 seconds per 1% increase in `% RH`, p<0.001); we note that the relationship between relative humidity and performance is likely U-shaped, which our linear model does not account for. Solar radiation shows no significant effect. The age and sex effects remain similar to our first model, with significant quadratic age terms and sex interactions.



To produce the second model (Table 7), we add interaction terms for all environmental variables with both `Age` and `Sex`. Environmental impacts on marathon performance differ significantly across age and sex. WBGT has a more pronounced effect on women and older runners (0.486 seconds more per year of `Age` per `WBGT` unit, p=0.009), while men are significantly less affected by WBGT (-16.615 seconds per unit compared to women, p=0.014). Air quality shows complex interactions --- while better air quality is generally associated with slower times (-11.271 seconds per AQI unit, p=0.009), this effect becomes more pronounced with age (0.208 seconds per year per AQI unit, p=0.010). Higher humidity benefits older runners more (-0.131 seconds per year per 1% increase in `% RH`, p=0.022). Wind drops out as a significant predictor in this more complex model, suggesting its effects may be captured by other variables or interactions.




\btwocol


```{r fixed effs model 1 aim 2}

fixed_effects <- tidy(aim2m1, effects = "fixed")

random_effects <- tidy(aim2m1, effects = "ran_pars")

fixed_effects %>% 
  dplyr::select (-c(effect, std.error, statistic, df)) %>% 
  filter(!(term %in% c("(Intercept)"))) %>%
  filter(p.value < 0.05) %>%
  kbl(
  digits = 3,
  caption = "Significant Fixed Effects of Main Effects Model for Aim 2",
  booktabs = TRUE
) %>%  kable_styling(font_size = 7.6)


```

```{r rand effs model 1 aim 2, eval = F}
kable(
  random_effects,
  digits = 3,
  caption = "Random Effects of Mixed-Effects Model for Aim 2",
  booktabs = TRUE
)



```



```{r fixed effs model 2 aim 2}

fixed_effects <- tidy(aim2m2, effects = "fixed")

random_effects <- tidy(aim2m2, effects = "ran_pars")

fixed_effects %>% 
  dplyr::select (-c(effect, std.error, statistic, df)) %>% 
  filter(!(term %in% c("(Intercept)"))) %>%
  filter(p.value < 0.05) %>%
  kbl(
  digits = 3,
  caption = "Significant Fixed Effects of Environmental Interaction Model for Aim 2",
  booktabs = TRUE
)  %>%  kable_styling(font_size = 7.6)


```

```{r rand eff aim 2 model 2, eval = F}
kable(
  random_effects,
  digits = 3,
  caption = "Random Effects of Mixed-Effects Model for Aim 2",
  booktabs = TRUE
)



```


\etwocol

```{r plots for aim 2 models, eval = F}
# Not used in this version

mean_CR <- mean(data$CR, na.rm = TRUE)
mean_Year <- mean(data$Year, na.rm = TRUE)
mean_Age <- mean(data$Age, na.rm = TRUE)
mean_Age2 <- mean_Age^2
mean_RH <- mean(data$`% RH`, na.rm=TRUE)
mean_SR <- mean(data$`SR W/m2`, na.rm=TRUE)
mean_Wind <- mean(data$Wind, na.rm=TRUE)
mean_AQI <- mean(data$AQI, na.rm=TRUE)


# Model 1 (no interaction) Plots

# WBGT Plot
wbgt_range <- seq(min(data$WBGT, na.rm=TRUE), max(data$WBGT, na.rm=TRUE), length.out = 100)
pred_data_m1_wbgt <- data.frame(
  CR = mean_CR,
  Year = mean_Year,
  Sex = factor("Female", levels = levels(data$Sex)), # Choose "Female" or "Male"
  Age = mean_Age,
  `I(Age^2)` = mean_Age2,
  `WBGT` = wbgt_range,
  `% RH` = mean_RH,
  `SR W/m2` = mean_SR,
  `Wind` = mean_Wind,
  `AQI` = mean_AQI
, check.names = FALSE) 


pred_data_m1_wbgt$Time_hat <- predict(aim2m1, newdata = pred_data_m1_wbgt, re.form = NA)

ggplot(pred_data_m1_wbgt, aes(x = WBGT, y = Time_hat)) +
  geom_line(color = "blue") +
  labs(title = "Predicted Marathon Time vs. WBGT (Model 1)",
       x = "WBGT",
       y = "Predicted Marathon Time (seconds)") +
  theme_minimal()


# Model 2 (with interactions) Plots

age_values <- c(30, 40, 50)
sex_values <- levels(data$Sex) 

pred_data_m2_wbgt <- expand.grid(
  CR = mean_CR,
  Year = mean_Year,
  Sex = sex_values,
  Age = age_values,
  `I(Age^2)` = mean_Age2,
  `WBGT` = wbgt_range,
  `% RH` = mean_RH,
  `SR W/m2` = mean_SR,
  `Wind` = mean_Wind,
  `AQI` = mean_AQI
, check.names = FALSE)  


pred_data_m2_wbgt$Time_hat <- predict(aim2m2, newdata = pred_data_m2_wbgt, re.form = NA)

ggplot(pred_data_m2_wbgt, aes(x = WBGT, y = Time_hat, color = Sex, linetype = factor(Age))) +
  geom_line(size = 1) +
  labs(title = "Predicted Marathon Time vs. WBGT by Sex and Age (Model 2)",
       x = "WBGT",
       y = "Predicted Marathon Time (seconds)",
       linetype = "Age",
       color = "Sex") +
  theme_minimal()

rh_range <- seq(min(data$`% RH`, na.rm=TRUE), max(data$`% RH`, na.rm=TRUE), length.out=100)
pred_data_m2_rh <- expand.grid(
  CR = mean_CR,
  Year = mean_Year,
  Sex = sex_values,
  Age = age_values,
  `I(Age^2)` = age_values^2,
  `WBGT` = mean(data$WBGT, na.rm=TRUE),
  `% RH` = rh_range,
  `SR W/m2` = mean_SR,
  `Wind` = mean_Wind,
  `AQI` = mean_AQI
)

pred_data_m2_rh$Time_hat <- predict(aim2m2, newdata = pred_data_m2_rh, re.form = NA)

ggplot(pred_data_m2_rh, aes(x = `% RH`, y = Time_hat, color = Sex, linetype = factor(Age))) +
  geom_line(size = 1) +
  labs(title = "Predicted Marathon Time vs. % RH by Sex and Age (Model 2)",
       x = "% RH",
       y = "Predicted Marathon Time (seconds)",
       linetype = "Age",
       color = "Sex") +
  theme_minimal()
```



### Aim 3: Identify the Weather Parameters that Have the Largest Impact on Marathon Performance

:::{.content-hidden}
*TODO* **Aim 3**
[x] Expand permutation importance explanation
[x] Add plot for permutation results

***Reflection***
TBD
:::



```{r aim 3: permute, eval = F}
# Run permutation importance
imp <- variable_importance_reg(aim2m2, data, "Time", n_iterations = 100)

```

```{r save permute, eval = F}
saveRDS(imp, "imp.rds")
```

```{r load permute}
imp <- readRDS("imp.rds")
```


```{r, echo=F, eval=F}
# Table of Variable Importance
kbl(imp[-1:-3])

```

```{r, fig.cap="Variable Importance with Logarithmic Scale", fig.height=2.5, fig.width=7.5, echo=F,eval=T}
# Plot of Variable Importance
ggplot(imp, aes(x = reorder(Variable, rev(`Relative Importance`)),
                                y = `Relative Importance`, fill = `Relative Importance`)) +
  geom_bar(stat = "identity") +
  scale_fill_gradient(low = "lightblue", high = "darkblue") + 
    scale_y_log10() + 
  #coord_flip() +
  labs(
    x = "",
    y = "Importance (log scale)",
    fill = "Relative Importance"
  ) +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 0, hjust = 1),
        axis.text.x = element_text(angle = 45, hjust = 1),
        plot.title = element_text(hjust = 0.5))
```


\vspace{-1mm}

First we observe based on @fig-corr that there are extremely weak correlations between weather variables and `% CR`. However, this does not preclude the relationship from being statistically significant as we see in the analysis above in Aim 2. To evaluate variable importance in a model-agnostic manner, we use permutation importance. Permutation importance evaluates the importance of a given variable on model fit by permuting the individual values of the given variable and measuring the degradation of model performance. There is a linear inverse relationship between the degradation of model fit and the importance of the given variable to the model. This analysis indicates that the most important environmental variable in predicting marathon performance (using `Time` as opposed to `% CR` for the reasons noted above) is `WBGT`. `WBGT` is `r round(imp[6,4] / imp[7,4],2)` times more important than the next most important environmental variable, `% RH`. The remaining environmental variables, `SR W/m2`, `Wind`, and `AQI` are successively less important and each less important than `% RH`. All environmental variables are far less consequential to finishing time than `Age`, `Sex`, and other control variables (for example, `WBGT` is `r round(imp[1,4] / imp[6,4],2)` times less important than `Age`).


## 5. Conclusion

### 5.1 Summary of Findings

The previous preliminary analysis on this data, performed by Dr. Ely, yielded a U-shaped relationship between age and performance, which was affected by gender, and found that WBGT affected % CR, impacted by both age and gender. Aim 1 analysis indicates marathon performance follows a U-shaped age curve, which is more pronounced for women. Women peak earlier (35.4 years) than men (37.1 years) and decline faster post-peak (7.06 vs 6.22 seconds/year squared). This leads to a widening gender performance gap in older ages, despite women's faster improvement in younger years. These findings emphasize the need for age and sex-specific training approaches.

Aim 2 analysis indicates environmental conditions impact marathon performance differently across age and gender. Higher WBGT and wind slow runners, with WBGT affecting women and older runners more. Men are less impacted by WBGT but more by poor air quality. Higher humidity unexpectedly benefits older runners. Wind affects all equally. These results highlight the importance of considering both environmental and individual factors in marathon preparation. Aim 3 analysis indicates WBGT is the most crucial environmental factor for marathon performance, significantly outweighing other environmental variables. However, runner characteristics like age and sex remain far more influential than any environmental factor. This suggests that while race organizers should prioritize WBGT considerations, individual attributes are still the primary determinants of marathon performance. Results are discussed in depth above.


### 5.2 Limitations & Future Aims

:::{.content-hidden}
*TODO* **Limitation**
[x] Add why we don't stratify by sex in limitations and reflect 

***Reflection***
Upon reflection, I feel my decision not to stratify the models by sex was methodologically sound (although future work could explore this, as I have noted in my limitations). Combining both sexes into a single model with interaction terms allowed us to directly quantify sex-based differences with greater statistical rigor, as we could test these differences through formal interaction terms rather than qualitatively comparing separate models. This approach also maximizes our statistical power by using the full dataset to estimate common parameters. The tradeoff of assuming similar error structures between sexes is justifiable given the benefits gained in interpretability and efficiency.

:::

Limitations include the following. We only have the top finisher at each age, which may produce selection bias for high performers. Data is limited for the youngest and oldest runners, with many fewer women than men over 70 years of age; and New York City and Grandma's Marathons have proportionally more 70+ year-olds and 0-18 year-olds, respectively, than we would expect based on their share of the total sample. Additionally, as discussed, the very slow times to finish included in the dataset could bias our conclusions. 

Although we know that environmental data originates from the same source as those used in Dr. Matthew Ely’s 2007 analysis, we do not know the geography for which weather data was collected. Moreover, as noted, it is unclear why `Flag` and  `WBGT` have opposite correlation directions with `Wind`, which is a potential question for future study. As discussed above, races differ from each other in important ways. `Race` is moderately correlated with many environmental variables, which is a potential limitation in our study, because the races are heterogeneous and conducted under different environmental conditions (discussed in detail above). Moreover, as noted, overly general geographies and overly general time aggregation are limitations for both environmental conditions and AQI analyses, and aggregation over air quality parameters is a further limitation for AQI analysis. A potential area for future work could be determining which AQS stations are close to the marathon routes. An additional future direction could be to keep AQI parameters separate and address missing data. Weather conditions may affect an average runner more or differently. As is also noted above, experiences of weather conditions and AQI may differ for later starters and those who spend longer on the course, including because temperature and AQI generally increase through the day.

We also omit (as discussed in detail above) model diagnostics as outside of scope for this report. Additionally, we do not engage in thorough variable selection procedure. We also do not explore non-linear models, which may be superior to linear models in this case given the complex non-linear relationships between performance, age, sex, and the environmental variables. We also do not explore polynomial terms for environmental variables (although their non-linear relationship with performance is clear from plotting), nor do we stratify modeling by sex. Finally, despite the good sample size, this analysis is limited by a lack of cross validation (k-fold or otherwise). These are all weaknesses that should be addressed in future work.


---











\newpage
# References

<div id="refs"></div>



\newgeometry{left=15mm,right=15mm,top=15mm,bottom=25mm}


\newpage
# Appendix I: Script Code 

```{r ref.label=knitr::all_labels(), echo=TRUE, eval=FALSE}
```




\newpage
# Appendix II: Functions Code 


```{r}
#| echo: true
#| eval: true 
#| file: _helpers.R
```
